// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "app/generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "../docs/"
}

enum user_identity_role_enum {
  siswa
  guru
  admin
}

model user {
  id           String                   @id @default(cuid())
  email        String                   @unique
  username     String                   @unique
  full_name    String
  birth_date   DateTime?
  phone_number String?
  hash         String?
  role         user_identity_role_enum?
  nis          String?
  nip          String?
  kelas_id     String?
  jadwal       jadwal[]
  is_verified  Boolean                  @default(false)
  created_at   DateTime                 @default(now())
  updated_at   DateTime?                @updatedAt
  kelas        kelas?                   @relation(fields: [kelas_id], references: [id], onDelete: SetNull)
}

model kelas {
  id          String        @id
  nama_kelas  String
  tingkat     Int
  wali_kelas  String?
  user        user[]
  kelas_mapel kelas_mapel[]
  jadwal      jadwal[]
  created_at  DateTime      @default(now())
  updated_at  DateTime?     @updatedAt
}

model kelas_mapel {
  id       String @id @default(uuid())
  kelas_id String
  mapel_id String
  kelas    kelas  @relation(fields: [kelas_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  mapel    mapel  @relation(fields: [mapel_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model mapel {
  id          String        @id
  nama_mapel  String
  deskripsi   String
  kelas_mapel kelas_mapel[]
  jadwal      jadwal[]
  created_at  DateTime      @default(now())
  updated_at  DateTime?     @updatedAt
}

model jadwal {
  id          String   @id @default(uuid())
  kelas_id    String
  mapel_id    String
  guru_id     String?         // opsional, jika guru ditetapkan untuk jadwal tertentu
  hari        String          // misalnya 'Senin', 'Selasa', dll.
  jam_mulai   DateTime        // waktu mulai
  jam_selesai DateTime        // waktu selesai
  kelas       kelas           @relation(fields: [kelas_id], references: [id], onDelete: Cascade)
  mapel       mapel           @relation(fields: [mapel_id], references: [id], onDelete: Cascade)
  // Asumsikan model user digunakan untuk guru, jika ada relasi:
  guru        user?           @relation(fields: [guru_id], references: [id], onDelete: Cascade)
}

model Materi {
  id         String   @id @default(uuid())
  judul      String
  deskripsi  String?
  fileUrl    String?  // Menyimpan path atau URL file yang di-upload
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}